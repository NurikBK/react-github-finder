{"ast":null,"code":"var _jsxFileName = \"/home/nurik/react-github-finder/src/context/github/GithubContext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useReducer } from 'react';\nimport githubReducer from './GithubReducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GithubContext = /*#__PURE__*/createContext();\nconst GITHUB_URL = process.env.REACT_APP_GITHUB_URL;\nconst GITHUB_TOKEN = process.env.REACT_APP_GITHUB_TOKEN;\nexport function GithubProvider(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const initialState = {\n    users: [],\n    user: {},\n    isLoading: false\n  };\n  const [state, dispatch] = useReducer(githubReducer, initialState);\n\n  async function searchUsers(text) {\n    setIsLoading();\n    const params = new URLSearchParams({\n      q: text\n    });\n    const res = await fetch(`${GITHUB_URL}/search/users?${params}`);\n    const {\n      items\n    } = await res.json();\n    dispatch({\n      type: 'GET_USERS',\n      payload: items\n    });\n  }\n\n  async function getUser(login) {\n    setIsLoading();\n    const res = await fetch(`${GITHUB_URL}/search/users?${login}`);\n\n    if (res.status === 404) {\n      window.location = '';\n    }\n\n    const {\n      items\n    } = await res.json();\n    dispatch({\n      type: 'GET_USERS',\n      payload: items\n    });\n  } // set isLoading\n\n\n  function setIsLoading() {\n    dispatch({\n      type: 'SET_LOADING'\n    });\n  }\n\n  function clearUsers() {\n    dispatch({\n      type: 'CLEAR_USERS'\n    });\n    console.log('click');\n  }\n\n  return /*#__PURE__*/_jsxDEV(GithubContext.Provider, {\n    value: {\n      users: state.users,\n      user: state.user,\n      isLoading: state.isLoading,\n      searchUsers,\n      clearUsers\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n\n_s(GithubProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = GithubProvider;\nexport default GithubContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"GithubProvider\");","map":{"version":3,"names":["createContext","useReducer","githubReducer","GithubContext","GITHUB_URL","process","env","REACT_APP_GITHUB_URL","GITHUB_TOKEN","REACT_APP_GITHUB_TOKEN","GithubProvider","children","initialState","users","user","isLoading","state","dispatch","searchUsers","text","setIsLoading","params","URLSearchParams","q","res","fetch","items","json","type","payload","getUser","login","status","window","location","clearUsers","console","log"],"sources":["/home/nurik/react-github-finder/src/context/github/GithubContext.js"],"sourcesContent":["import { createContext, useReducer } from 'react';\nimport githubReducer from './GithubReducer';\n\nconst GithubContext = createContext();\n\nconst GITHUB_URL = process.env.REACT_APP_GITHUB_URL;\nconst GITHUB_TOKEN = process.env.REACT_APP_GITHUB_TOKEN;\n\nexport function GithubProvider({ children }) {\n  const initialState = {\n    users: [],\n    user: {},\n    isLoading: false,\n  };\n\n  const [state, dispatch] = useReducer(githubReducer, initialState);\n\n  async function searchUsers(text) {\n    setIsLoading();\n\n    const params = new URLSearchParams({ q: text });\n\n    const res = await fetch(`${GITHUB_URL}/search/users?${params}`);\n    const { items } = await res.json();\n\n    dispatch({\n      type: 'GET_USERS',\n      payload: items,\n    });\n  }\n\n  async function getUser(login) {\n    setIsLoading();\n\n    const res = await fetch(`${GITHUB_URL}/search/users?${login}`);\n\n    if(res.status === 404) {\n      window.location = ''\n    }\n\n    const { items } = await res.json();\n\n    dispatch({\n      type: 'GET_USERS',\n      payload: items,\n    });\n  }\n\n\n  // set isLoading\n  function setIsLoading() {\n    dispatch({ type: 'SET_LOADING' });\n  }\n\n  function clearUsers() {\n    dispatch({\n      type: 'CLEAR_USERS',\n    });\n    console.log('click');\n  }\n\n  return (\n    <GithubContext.Provider\n      value={{\n        users: state.users,\n        user: state.user,\n        isLoading: state.isLoading,\n        searchUsers,\n        clearUsers,\n      }}\n    >\n      {children}\n    </GithubContext.Provider>\n  );\n}\n\nexport default GithubContext;\n"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,QAA0C,OAA1C;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAEA,MAAMC,aAAa,gBAAGH,aAAa,EAAnC;AAEA,MAAMI,UAAU,GAAGC,OAAO,CAACC,GAAR,CAAYC,oBAA/B;AACA,MAAMC,YAAY,GAAGH,OAAO,CAACC,GAAR,CAAYG,sBAAjC;AAEA,OAAO,SAASC,cAAT,OAAsC;EAAA;;EAAA,IAAd;IAAEC;EAAF,CAAc;EAC3C,MAAMC,YAAY,GAAG;IACnBC,KAAK,EAAE,EADY;IAEnBC,IAAI,EAAE,EAFa;IAGnBC,SAAS,EAAE;EAHQ,CAArB;EAMA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBhB,UAAU,CAACC,aAAD,EAAgBU,YAAhB,CAApC;;EAEA,eAAeM,WAAf,CAA2BC,IAA3B,EAAiC;IAC/BC,YAAY;IAEZ,MAAMC,MAAM,GAAG,IAAIC,eAAJ,CAAoB;MAAEC,CAAC,EAAEJ;IAAL,CAApB,CAAf;IAEA,MAAMK,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAErB,UAAW,iBAAgBiB,MAAO,EAAtC,CAAvB;IACA,MAAM;MAAEK;IAAF,IAAY,MAAMF,GAAG,CAACG,IAAJ,EAAxB;IAEAV,QAAQ,CAAC;MACPW,IAAI,EAAE,WADC;MAEPC,OAAO,EAAEH;IAFF,CAAD,CAAR;EAID;;EAED,eAAeI,OAAf,CAAuBC,KAAvB,EAA8B;IAC5BX,YAAY;IAEZ,MAAMI,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAErB,UAAW,iBAAgB2B,KAAM,EAArC,CAAvB;;IAEA,IAAGP,GAAG,CAACQ,MAAJ,KAAe,GAAlB,EAAuB;MACrBC,MAAM,CAACC,QAAP,GAAkB,EAAlB;IACD;;IAED,MAAM;MAAER;IAAF,IAAY,MAAMF,GAAG,CAACG,IAAJ,EAAxB;IAEAV,QAAQ,CAAC;MACPW,IAAI,EAAE,WADC;MAEPC,OAAO,EAAEH;IAFF,CAAD,CAAR;EAID,CAtC0C,CAyC3C;;;EACA,SAASN,YAAT,GAAwB;IACtBH,QAAQ,CAAC;MAAEW,IAAI,EAAE;IAAR,CAAD,CAAR;EACD;;EAED,SAASO,UAAT,GAAsB;IACpBlB,QAAQ,CAAC;MACPW,IAAI,EAAE;IADC,CAAD,CAAR;IAGAQ,OAAO,CAACC,GAAR,CAAY,OAAZ;EACD;;EAED,oBACE,QAAC,aAAD,CAAe,QAAf;IACE,KAAK,EAAE;MACLxB,KAAK,EAAEG,KAAK,CAACH,KADR;MAELC,IAAI,EAAEE,KAAK,CAACF,IAFP;MAGLC,SAAS,EAAEC,KAAK,CAACD,SAHZ;MAILG,WAJK;MAKLiB;IALK,CADT;IAAA,UASGxB;EATH;IAAA;IAAA;IAAA;EAAA,QADF;AAaD;;GAlEeD,c;;KAAAA,c;AAoEhB,eAAeP,aAAf"},"metadata":{},"sourceType":"module"}