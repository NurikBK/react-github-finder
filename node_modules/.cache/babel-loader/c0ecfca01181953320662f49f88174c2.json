{"ast":null,"code":"var _jsxFileName = \"/home/nurik/react-github-finder/src/context/github/GithubContext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useReducer } from 'react';\nimport githubReduser from './GithubReduser';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GithubContext = /*#__PURE__*/createContext();\nconst GITHUB_URL = process.env.REACT_APP_GITHUB_URL;\nconst GITHUB_TOKEN = process.env.REACT_APP_GITHUB_TOKEN;\nexport function GithubProvider(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const initialState = {\n    users: [],\n    loading: true\n  };\n  const [state, dispatch] = useReducer(githubReduser, initialState);\n\n  async function fetchUsers() {\n    const res = await fetch(`${GITHUB_URL}/users`);\n    const data = await res.json();\n    dispatch({\n      type: 'GET_USERS',\n      payload: data\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(GithubContext.Provider, {\n    value: {\n      users: state.users,\n      isLoading: state.isLoading,\n      fetchUsers\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(GithubProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = GithubProvider;\nexport default GithubContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"GithubProvider\");","map":{"version":3,"names":["createContext","useReducer","githubReduser","GithubContext","GITHUB_URL","process","env","REACT_APP_GITHUB_URL","GITHUB_TOKEN","REACT_APP_GITHUB_TOKEN","GithubProvider","children","initialState","users","loading","state","dispatch","fetchUsers","res","fetch","data","json","type","payload","isLoading"],"sources":["/home/nurik/react-github-finder/src/context/github/GithubContext.js"],"sourcesContent":["import { createContext, useReducer } from 'react';\nimport githubReduser from './GithubReduser';\n\nconst GithubContext = createContext();\n\nconst GITHUB_URL = process.env.REACT_APP_GITHUB_URL;\nconst GITHUB_TOKEN = process.env.REACT_APP_GITHUB_TOKEN;\n\nexport function GithubProvider({ children }) {\n  const initialState = {\n    users: [],\n    loading: true\n  }\n\n  const [state, dispatch] = useReducer(githubReduser, initialState)\n\n\n  async function fetchUsers() {\n    const res = await fetch(`${GITHUB_URL}/users`);\n    const data = await res.json();\n\n    dispatch({\n      type: 'GET_USERS',\n      payload: data\n    })\n    \n  }\n\n  \n\n  return (\n    <GithubContext.Provider value={{ users: state.users, isLoading: state.isLoading, fetchUsers }}>\n      {children}\n    </GithubContext.Provider>\n  );\n}\n\nexport default GithubContext;\n"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,QAA0C,OAA1C;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAEA,MAAMC,aAAa,gBAAGH,aAAa,EAAnC;AAEA,MAAMI,UAAU,GAAGC,OAAO,CAACC,GAAR,CAAYC,oBAA/B;AACA,MAAMC,YAAY,GAAGH,OAAO,CAACC,GAAR,CAAYG,sBAAjC;AAEA,OAAO,SAASC,cAAT,OAAsC;EAAA;;EAAA,IAAd;IAAEC;EAAF,CAAc;EAC3C,MAAMC,YAAY,GAAG;IACnBC,KAAK,EAAE,EADY;IAEnBC,OAAO,EAAE;EAFU,CAArB;EAKA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBf,UAAU,CAACC,aAAD,EAAgBU,YAAhB,CAApC;;EAGA,eAAeK,UAAf,GAA4B;IAC1B,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEf,UAAW,QAAf,CAAvB;IACA,MAAMgB,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;IAEAL,QAAQ,CAAC;MACPM,IAAI,EAAE,WADC;MAEPC,OAAO,EAAEH;IAFF,CAAD,CAAR;EAKD;;EAID,oBACE,QAAC,aAAD,CAAe,QAAf;IAAwB,KAAK,EAAE;MAAEP,KAAK,EAAEE,KAAK,CAACF,KAAf;MAAsBW,SAAS,EAAET,KAAK,CAACS,SAAvC;MAAkDP;IAAlD,CAA/B;IAAA,UACGN;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAKD;;GA3BeD,c;;KAAAA,c;AA6BhB,eAAeP,aAAf"},"metadata":{},"sourceType":"module"}